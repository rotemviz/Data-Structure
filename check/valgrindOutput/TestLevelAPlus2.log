==3701== Memcheck, a memory error detector
==3701== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3701== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==3701== Command: ./a.out
==3701== Parent PID: 3451
==3701== 
==3701== Invalid read of size 8
==3701==    at 0x10D102: AVL_Tree<int, Pirate*>::rollRight(AVL_Tree<int, Pirate*>::Node*) (AVL_Tree.h:74)
==3701==    by 0x10C8C0: AVL_Tree<int, Pirate*>::insert(int const&, Pirate* const&, AVL_Tree<int, Pirate*>::Node*) (AVL_Tree.h:121)
==3701==    by 0x10C747: AVL_Tree<int, Pirate*>::insert(int const&, Pirate* const&, AVL_Tree<int, Pirate*>::Node*) (AVL_Tree.h:100)
==3701==    by 0x10C747: AVL_Tree<int, Pirate*>::insert(int const&, Pirate* const&, AVL_Tree<int, Pirate*>::Node*) (AVL_Tree.h:100)
==3701==    by 0x10BE4A: AVL_Tree<int, Pirate*>::insert(int const&, Pirate* const&) (AVL_Tree.h:262)
==3701==    by 0x10B363: Ocean::add_pirate(int, int, int) (pirates24b1.cpp:66)
==3701==    by 0x10A5EB: main (main24b1.cpp:40)
==3701==  Address 0x10 is not stack'd, malloc'd or (recently) free'd
==3701== 
==3701== 
==3701== Process terminating with default action of signal 11 (SIGSEGV)
==3701==  Access not within mapped region at address 0x10
==3701==    at 0x10D102: AVL_Tree<int, Pirate*>::rollRight(AVL_Tree<int, Pirate*>::Node*) (AVL_Tree.h:74)
==3701==    by 0x10C8C0: AVL_Tree<int, Pirate*>::insert(int const&, Pirate* const&, AVL_Tree<int, Pirate*>::Node*) (AVL_Tree.h:121)
==3701==    by 0x10C747: AVL_Tree<int, Pirate*>::insert(int const&, Pirate* const&, AVL_Tree<int, Pirate*>::Node*) (AVL_Tree.h:100)
==3701==    by 0x10C747: AVL_Tree<int, Pirate*>::insert(int const&, Pirate* const&, AVL_Tree<int, Pirate*>::Node*) (AVL_Tree.h:100)
==3701==    by 0x10BE4A: AVL_Tree<int, Pirate*>::insert(int const&, Pirate* const&) (AVL_Tree.h:262)
==3701==    by 0x10B363: Ocean::add_pirate(int, int, int) (pirates24b1.cpp:66)
==3701==    by 0x10A5EB: main (main24b1.cpp:40)
==3701==  If you believe this happened as a result of a stack
==3701==  overflow in your program's main thread (unlikely but
==3701==  possible), you can try to increase the size of the
==3701==  main thread stack using the --main-stacksize= flag.
==3701==  The main thread stack size used in this run was 8388608.
==3701== 
==3701== HEAP SUMMARY:
==3701==     in use at exit: 86,271 bytes in 161 blocks
==3701==   total heap usage: 434 allocs, 273 frees, 92,846 bytes allocated
==3701== 
==3701== LEAK SUMMARY:
==3701==    definitely lost: 0 bytes in 0 blocks
==3701==    indirectly lost: 0 bytes in 0 blocks
==3701==      possibly lost: 0 bytes in 0 blocks
==3701==    still reachable: 86,271 bytes in 161 blocks
==3701==         suppressed: 0 bytes in 0 blocks
==3701== Reachable blocks (those to which a pointer was found) are not shown.
==3701== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==3701== 
==3701== For lists of detected and suppressed errors, rerun with: -s
==3701== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
